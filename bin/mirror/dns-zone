#!/usr/bin/python -tt

# ProFTPD Mirror Network Maintenance System
# Copyright (c) 2010, John Morrissey <jwm@horde.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.

import re
import socket

import MySQLdb
import MySQLdb.cursors

import mmaint_creds

db = MySQLdb.connect(host=mmaint_creds.DB['host'],
	user=mmaint_creds.DB['user'], passwd=mmaint_creds.DB['pass'],
	db=mmaint_creds.DB['db'], cursorclass=MySQLdb.cursors.DictCursor)
c = db.cursor()

print """
; ************************************************************
; This file is updated automatically; use the ProFTPD Mirror
; Maintenance system to update.
; ************************************************************

"""


for type in ['www', 'ftp']:
	c.execute("""
	    SELECT country_iso, COUNT(*) AS count
	      FROM %smirrors
	     WHERE live = 'true'
	  GROUP BY country_iso""" % type)

	iso_count = {}
	for row in c.fetchall():
		iso_count[row['country_iso']] = row['count']


	c.execute("""
	    SELECT site, admin, admin_email, country_iso, sequence
	      FROM %smirrors
	     WHERE live = 'true'
	  ORDER BY country_iso, sequence""" % type)

	round_robin_sites = {}
	for row in c.fetchall():
		matches = re.search(r'^(?:ftp|http)://([^/]+)($|/)', row['site'])
		if not matches:
			print >>sys.stderr, 'Unable to match URL %s' % row[0]
			sys.exit(1)

		host = matches.group(1)

		if row['country_iso'] not in round_robin_sites:
			round_robin_sites[row['country_iso']] = []
		round_robin_sites[row['country_iso']].append(host)

		print '; %s' % row['site']
		print '; %s <%s>' % (row['admin'], row['admin_email'])
		print '%s%s.%s		IN	CNAME	%s.' % \
			(type, row['sequence'], row['country_iso'], host)
		print

	for iso in sorted(round_robin_sites):
		hosts = round_robin_sites[iso]

		if len(hosts) == 1:
			print '%s.%s		IN	CNAME	%s.' % (type, iso, hosts[0])
			continue

		for host in hosts:
			for addr in socket.getaddrinfo(host, None, socket.AF_INET, socket.SOCK_STREAM):
				print '%s.%s		IN	A	%s' % (type, iso, addr[4][0])
			try:
				for addr in socket.getaddrinfo(host, None, socket.AF_INET6, socket.SOCK_STREAM):
					print '%s.%s		IN	AAAA	%s' % (type, iso, addr[4][0])
			except socket.gaierror, e:
				if e.errno not in [socket.EAI_NODATA, socket.EAI_NONAME]:
					raise
